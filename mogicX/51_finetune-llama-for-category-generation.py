# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/51_finetune-llama-for-category-generation.ipynb.

# %% auto 0
__all__ = ['PROMPT_TEMPLATE', 'make_prompt', 'load_data']

# %% ../nbs/51_finetune-llama-for-category-generation.ipynb 1
import torch, pandas as pd, json, numpy as np
from torch.utils.data import Dataset, DataLoader

from peft import LoraConfig, get_peft_model
from transformers import AutoTokenizer, LlamaForCausalLM, Trainer, TrainingArguments

# %% ../nbs/51_finetune-llama-for-category-generation.ipynb 4
PROMPT_TEMPLATE = """<|begin_of_text|><|start_header_id|>system<|end_header_id|>

You are a helpful assistant<|eot_id|><|start_header_id|>user<|end_header_id|>

You are given a passage of text and one or more questions that can be answered from the passage. Assume the passage is part of a Wikipedia article.

Your task: Identify at least 5 relevant Wikipedia categories for the article that help connect the passage with the question(s).

Guidelines for categories:
1. Must be broad but still specific (not generic like Thing or Knowledge).
2. Match Wikipediaâ€™s category style:
   - Use plural nouns or topic phrases
   - Reflect standard groupings (topics, time periods, locations, types)
   - No long sentences; keep them as labels or tags
3. Use existing Wikipedia-style categories (choose the most plausible if unsure).
4. Do not include the "Category:" prefix. Output plain names only.

Scoring:
Assign each category a relevance score from {{1, 2, 3, 4, 5}}
5 = most relevant
1 = irrelevant

Input notes:
If multiple questions exist, they will be separated by " || "

Output format:
Return the result strictly and only in **valid JSON** with this structure:

{{
    "Category Name 1":score,
    "Category Name 2":score,
    "Category Name 3":score,
    "Category Name 4":score,
    "Category Name 5":score
}}

Rules:
- Do not output anything outside the `{{}}` block.
- Categories must look like valid Wikipedia labels, not explanations.
- Ensure the output can be parsed by:

```
python
import json
content = json.loads(output)
```

Example 1
Passage:
Definition: Acre. An acre is a measure of land area in Imperial units or U.S. customary units. It is equal to 43 560 square feet, 4840 square yards, or 160 square rods. The precise meaning of this depends on the exact definition adopted for a foot: the international acre is 4 046.856 422 4 m (for the UK, see).

Questions:
convert acres to sq. ft.

Expected output:
{{
    'Units of area':5,
    'Imperial units':4,
    'Customary units in the United States':4,
    'Agricultural terminology':3,
    'Land measurement systems':3
}}

Example 2
Passage:
When will my dog come into heat? What age will my dog come into her first heat? First heat can vary greatly dog to dog. The youngest is about six months of age though sometimes a female will come into season younger. First heat can start as late as 12 or even 14 months of age or later in rare cases. Again, it can vary dog to dog. How often will my dog come into heat? Again, this varies dog-to-dog average is every six months but it could be more or less often.

Questions:
when do female dogs first go into heat

Expected output:
{{
    'Dog breeding':5,
    'Animal reproduction':5,
    'Dogs as pets':4,
    'Mammal physiology':3,
    'Veterinary medicine topics':3    
}}

Example 3
Passage:
Cottonmouth and copperhead bites are immediately painful and signs and symptoms such as those listed below, usually begin immediately: 1  body as a whole swelling. 2  respiratory difficulty breathing. 3  skin discoloration of skin.  gastrointestinal nausea, 1  vomiting. heart and blood vessels weak pulse.

Questions:
copperhead snake bite effects

Expected output:
{{
    'Snakebites':5,
    'Toxicology':4,
    'Venomous snakes of North America':4,
    'Copperheads (genus)':4,
    'Emergency medicine cases':4,
    'Cottonmouths (Agkistrodon piscivorus)':3,
    'Toxicology incidents in the United States':3
}}

Now you are given with this passage:
Passage: 
"{passage}"

Questions: 
"{questions}"

Do not output anything outside the `{{}}` block.
Do not include the "Category:" prefix in the category names. Use plain names only.
Each category must look like a valid Wikipedia-style label, not a free-text explanation.
Remember to provide ONLY the categories in the correct format and no other explanation.
<|eot_id|><|start_header_id|>assistant<|end_header_id|>"""

# %% ../nbs/51_finetune-llama-for-category-generation.ipynb 7
def make_prompt(passage, questions):
    return PROMPT_TEMPLATE.format(passage=passage, questions=questions)
    

# %% ../nbs/51_finetune-llama-for-category-generation.ipynb 17
def load_data(input_file, category_file):
    df = pd.read_csv(input_file, sep='\t', header=None, names=['identifier', 'passage', 'questions'])
    
    with open(category_file) as file:
        categories = json.load(file)
    categories = [json.dumps(categories[idx]) if idx in categories else None  for idx in map(str, df['identifier'])]
    df['categories'] = categories
    
    idx = np.where(~df['categories'].isna())[0]
    return df.iloc[idx]
    
